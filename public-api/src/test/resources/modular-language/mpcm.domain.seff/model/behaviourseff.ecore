<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="behaviourseff" nsURI="mpcm.domain.behaviourseff" nsPrefix="mpcm.domain.behaviourseff">
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="documentation" value="Package containing the abstract behaviour model of components"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviourSEFF" eSuperTypes="../../mpcm.domain.softwarerepository/model/softwarerepository.ecore#//ServiceEffectSpecification">
    <eStructuralFeatures xsi:type="ecore:EReference" name="behaviour" lowerBound="1"
        eType="ecore:EClass ../../mpcm.paradigm.behaviour.seff/model/seff.ecore#//Behaviour"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ProbabilisticBranchTransition" eSuperTypes="../../mpcm.paradigm.behaviour.seff/model/seff.ecore#//AbstractBranchTransition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="a GuardedBranchTransition, this transition provides a link between a BranchAction and a nested ResourceDemandingBehaviour, which includes the actions executed inside the branch. But instead of using a guard, it specifies a branching probability without parameter dependencies. Analysis tools may directly use it to determine the transition where the control flow continues. The probabilities of all ProbabilisticBranchTransitions belonging to a single BranchAction must sum up to 1.0. &#xD;&#xA;Although a probabilistic choice at a branch usually does not happen in a computer program, ProbabilisticBranchTransitions provide a convenient way of modelling in case the actual parameter dependency is too hard to determine or too complex to integrate into a guard. It can also be useful for newly designed components, where the parameter dependency on the control flow guard is still be unknown. However, this construct potentially introduces inaccuracies into the performance model, because it does not reflect the influence of input parameters. Therefore, predictions based on this model can be misleading, if the used input parameters would result in different branching probabilities. The component developer cannot foresee this, when specifying the RDSEFF using ProbabilisticBranchTransitions."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="branchProbability" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GuardedBranchTransition" eSuperTypes="../../mpcm.paradigm.behaviour.seff/model/seff.ecore#//AbstractBranchTransition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Guarded&amp;nbsp;Branch&amp;nbsp;Transition&amp;nbsp;Provides&amp;nbsp;a&amp;nbsp;link&amp;nbsp;between&amp;nbsp;a&amp;nbsp;BranchAction&amp;nbsp;and&amp;nbsp;a&amp;nbsp;nested&amp;nbsp;ResourceDemandingBehaviour,&amp;nbsp;which&amp;nbsp;includes&amp;nbsp;the&amp;nbsp;actions&amp;nbsp;executed&amp;nbsp;inside&amp;nbsp;the&amp;nbsp;branch.&amp;nbsp;It&amp;nbsp;uses&amp;nbsp;a&amp;nbsp;guard,&amp;nbsp;i.e.&amp;nbsp;a&amp;nbsp;boolean&amp;nbsp;expression&amp;nbsp;specified&amp;nbsp;by&amp;nbsp;a&amp;nbsp;RandomVariable,&amp;nbsp;to&amp;nbsp;determine&amp;nbsp;whether&amp;nbsp;the&amp;nbsp;transition&amp;nbsp;is&amp;nbsp;chosen.&amp;nbsp;If&amp;nbsp;the&amp;nbsp;guard&amp;nbsp;evaluates&amp;nbsp;to&amp;nbsp;true,&amp;nbsp;the&amp;nbsp;branch&amp;nbsp;is&amp;nbsp;chosen,&amp;nbsp;otherwise&amp;nbsp;if&amp;nbsp;the&amp;nbsp;guard&amp;nbsp;evaluates&amp;nbsp;to&amp;nbsp;false&amp;nbsp;another&amp;nbsp;branch&amp;nbsp;transition&amp;nbsp;must&amp;nbsp;be&amp;nbsp;chosen.&lt;br />&#xD;&#xA;The&amp;nbsp;guard&amp;nbsp;may&amp;nbsp;contain&amp;nbsp;references&amp;nbsp;to&amp;nbsp;the&amp;nbsp;service's&amp;nbsp;input&amp;nbsp;parameters&amp;nbsp;or&amp;nbsp;component&amp;nbsp;parameters.&amp;nbsp;A&amp;nbsp;component&amp;nbsp;developer&amp;nbsp;can&amp;nbsp;specify&amp;nbsp;complex&amp;nbsp;boolean&amp;nbsp;expressions&amp;nbsp;by&amp;nbsp;using&amp;nbsp;the&amp;nbsp;AND,&amp;nbsp;OR,&amp;nbsp;and&amp;nbsp;NOT&amp;nbsp;operations&amp;nbsp;provided&amp;nbsp;by&amp;nbsp;the&amp;nbsp;StoEx&amp;nbsp;framework.&amp;nbsp;As&amp;nbsp;the&amp;nbsp;domain&amp;nbsp;expert&amp;nbsp;may&amp;nbsp;have&amp;nbsp;characterised&amp;nbsp;the&amp;nbsp;parameters&amp;nbsp;used&amp;nbsp;in&amp;nbsp;a&amp;nbsp;guard&amp;nbsp;with&amp;nbsp;probability&amp;nbsp;distributions,&amp;nbsp;it&amp;nbsp;might&amp;nbsp;happen&amp;nbsp;that&amp;nbsp;a&amp;nbsp;guard&amp;nbsp;does&amp;nbsp;not&amp;nbsp;evaluate&amp;nbsp;to&amp;nbsp;true&amp;nbsp;or&amp;nbsp;false&amp;nbsp;with&amp;nbsp;a&amp;nbsp;probability&amp;nbsp;of&amp;nbsp;1.0.&amp;nbsp;For&amp;nbsp;example,&amp;nbsp;the&amp;nbsp;specification&amp;nbsp;can&amp;nbsp;express&amp;nbsp;that&amp;nbsp;a&amp;nbsp;guard&amp;nbsp;evaluates&amp;nbsp;to&amp;nbsp;true&amp;nbsp;with&amp;nbsp;a&amp;nbsp;probability&amp;nbsp;of&amp;nbsp;0.3,&amp;nbsp;and&amp;nbsp;to&amp;nbsp;false&amp;nbsp;with&amp;nbsp;a&amp;nbsp;probability&amp;nbsp;of&amp;nbsp;0.7.&amp;nbsp;In&amp;nbsp;any&amp;nbsp;case,&amp;nbsp;the&amp;nbsp;probabilities&amp;nbsp;of&amp;nbsp;the&amp;nbsp;individual&amp;nbsp;guards&amp;nbsp;attached&amp;nbsp;to&amp;nbsp;all&amp;nbsp;GuardedBranchTransitions&amp;nbsp;contained&amp;nbsp;in&amp;nbsp;a&amp;nbsp;BranchAction&amp;nbsp;must&amp;nbsp;sum&amp;nbsp;up&amp;nbsp;to&amp;nbsp;1.0.&lt;br />&#xD;&#xA;There&amp;nbsp;is&amp;nbsp;no&amp;nbsp;predefined&amp;nbsp;order&amp;nbsp;in&amp;nbsp;evaluating&amp;nbsp;the&amp;nbsp;guards&amp;nbsp;attached&amp;nbsp;to&amp;nbsp;a&amp;nbsp;BranchAction.&amp;nbsp;This&amp;nbsp;differs&amp;nbsp;from&amp;nbsp;programming&amp;nbsp;languages&amp;nbsp;such&amp;nbsp;as&amp;nbsp;C&amp;nbsp;or&amp;nbsp;Java,&amp;nbsp;where&amp;nbsp;the&amp;nbsp;conditions&amp;nbsp;on&amp;nbsp;if/then/else&amp;nbsp;statements&amp;nbsp;are&amp;nbsp;evaluated&amp;nbsp;in&amp;nbsp;the&amp;nbsp;order&amp;nbsp;of&amp;nbsp;their&amp;nbsp;appearance&amp;nbsp;in&amp;nbsp;the&amp;nbsp;code.&amp;nbsp;Such&amp;nbsp;programming&amp;nbsp;languages&amp;nbsp;allow&amp;nbsp;overlapping&amp;nbsp;branching&amp;nbsp;conditions&amp;nbsp;(for&amp;nbsp;example,&amp;nbsp;if&amp;nbsp;(X&amp;lt;10)&amp;nbsp;//...&amp;nbsp;else&amp;nbsp;if&amp;nbsp;(X&amp;lt;20)&amp;nbsp;//&amp;nbsp;...),&amp;nbsp;which&amp;nbsp;are&amp;nbsp;not&amp;nbsp;allowed&amp;nbsp;for&amp;nbsp;the&amp;nbsp;guards&amp;nbsp;in&amp;nbsp;GuardedBranchTransitions,&amp;nbsp;because&amp;nbsp;the&amp;nbsp;missing&amp;nbsp;order&amp;nbsp;specification&amp;nbsp;would&amp;nbsp;lead&amp;nbsp;to&amp;nbsp;ambiguous&amp;nbsp;boolean&amp;nbsp;expressions&amp;nbsp;and&amp;nbsp;enable&amp;nbsp;more&amp;nbsp;than&amp;nbsp;one&amp;nbsp;guard&amp;nbsp;to&amp;nbsp;become&amp;nbsp;true.&amp;nbsp;If&amp;nbsp;X&amp;nbsp;would&amp;nbsp;have&amp;nbsp;the&amp;nbsp;value&amp;nbsp;5,&amp;nbsp;both&amp;nbsp;conditions&amp;nbsp;would&amp;nbsp;evaluate&amp;nbsp;to&amp;nbsp;true&amp;nbsp;if&amp;nbsp;they&amp;nbsp;would&amp;nbsp;be&amp;nbsp;used&amp;nbsp;directly&amp;nbsp;as&amp;nbsp;guards&amp;nbsp;in&amp;nbsp;GuardedBranchTransitions.&amp;nbsp;The&amp;nbsp;correct&amp;nbsp;specification&amp;nbsp;of&amp;nbsp;the&amp;nbsp;guards&amp;nbsp;in&amp;nbsp;this&amp;nbsp;case&amp;nbsp;would&amp;nbsp;be&amp;nbsp;X.VALUE&amp;nbsp;10&amp;nbsp;and&amp;nbsp;X.VALUE&amp;nbsp;10&amp;nbsp;AND&amp;nbsp;X.VALUE&amp;nbsp;20.&amp;nbsp;Guards&amp;nbsp;might&amp;nbsp;lead&amp;nbsp;to&amp;nbsp;stochastic&amp;nbsp;dependencies&amp;nbsp;when&amp;nbsp;evaluating&amp;nbsp;variable&amp;nbsp;characterisations&amp;nbsp;inside&amp;nbsp;a&amp;nbsp;branched&amp;nbsp;behaviour.&amp;nbsp;For&amp;nbsp;example,&amp;nbsp;if&amp;nbsp;the&amp;nbsp;guard&amp;nbsp;X.VALUE&amp;nbsp;&amp;nbsp;&amp;nbsp;10&amp;nbsp;had&amp;nbsp;formerly&amp;nbsp;evaluated&amp;nbsp;to&amp;nbsp;true,&amp;nbsp;and&amp;nbsp;the&amp;nbsp;RDSEFF&amp;nbsp;uses&amp;nbsp;X.VALUE&amp;nbsp;inside&amp;nbsp;the&amp;nbsp;branched&amp;nbsp;behaviour,&amp;nbsp;the&amp;nbsp;sample&amp;nbsp;space&amp;nbsp;of&amp;nbsp;the&amp;nbsp;random&amp;nbsp;variable&amp;nbsp;specifying&amp;nbsp;the&amp;nbsp;characterisation&amp;nbsp;must&amp;nbsp;be&amp;nbsp;restricted,&amp;nbsp;as&amp;nbsp;the&amp;nbsp;event&amp;nbsp;that&amp;nbsp;X&amp;nbsp;takes&amp;nbsp;a&amp;nbsp;values&amp;nbsp;greater&amp;nbsp;than&amp;nbsp;10&amp;nbsp;cannot&amp;nbsp;occur&amp;nbsp;anymore.&amp;nbsp;Therefore&amp;nbsp;its&amp;nbsp;probability&amp;nbsp;is&amp;nbsp;zero.&amp;nbsp;Any&amp;nbsp;variable&amp;nbsp;characterisation&amp;nbsp;always&amp;nbsp;needs&amp;nbsp;to&amp;nbsp;be&amp;nbsp;evaluated&amp;nbsp;under&amp;nbsp;the&amp;nbsp;condition&amp;nbsp;that&amp;nbsp;all&amp;nbsp;guards&amp;nbsp;in&amp;nbsp;the&amp;nbsp;usage&amp;nbsp;scenarioâ€™s&amp;nbsp;path&amp;nbsp;to&amp;nbsp;it&amp;nbsp;have&amp;nbsp;evaluated&amp;nbsp;to&amp;nbsp;true."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="branchCondition_GuardedBranchTransition"
        ordered="false" lowerBound="1" eType="ecore:EClass ../../mpcm.paradigm.variables/model/variables.ecore#//PCMRandomVariable"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CollectionIteratorAction" eSuperTypes="../../mpcm.paradigm.behaviour.seff/model/seff.ecore#//AbstractLoopAction">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Collection&amp;nbsp;Iterator&amp;nbsp;Action&amp;nbsp;Models&amp;nbsp;the&amp;nbsp;repeated&amp;nbsp;execution&amp;nbsp;of&amp;nbsp;its&amp;nbsp;inner&amp;nbsp;ResourceDemandingBehaviour&amp;nbsp;for&amp;nbsp;each&amp;nbsp;element&amp;nbsp;of&amp;nbsp;a&amp;nbsp;collection&amp;nbsp;data&amp;nbsp;type.&amp;nbsp;Therefore&amp;nbsp;it&amp;nbsp;contains&amp;nbsp;a&amp;nbsp;reference&amp;nbsp;to&amp;nbsp;an&amp;nbsp;input&amp;nbsp;parameter&amp;nbsp;of&amp;nbsp;the&amp;nbsp;service's&amp;nbsp;signature,&amp;nbsp;which&amp;nbsp;must&amp;nbsp;be&amp;nbsp;of&amp;nbsp;type&amp;nbsp;CollectionDataType.&amp;nbsp;The&amp;nbsp;NUMBER&amp;nbsp;OF&amp;nbsp;ELEMENTS&amp;nbsp;must&amp;nbsp;be&amp;nbsp;specified&amp;nbsp;from&amp;nbsp;the&amp;nbsp;outside&amp;nbsp;of&amp;nbsp;the&amp;nbsp;component,&amp;nbsp;either&amp;nbsp;by&amp;nbsp;another&amp;nbsp;RDSEFF&amp;nbsp;or&amp;nbsp;by&amp;nbsp;an&amp;nbsp;usage&amp;nbsp;model&amp;nbsp;calling&amp;nbsp;this&amp;nbsp;service.&amp;nbsp;It&amp;nbsp;can&amp;nbsp;be&amp;nbsp;of&amp;nbsp;type&amp;nbsp;integer&amp;nbsp;or&amp;nbsp;IntPMF.&amp;nbsp;Besides&amp;nbsp;the&amp;nbsp;source&amp;nbsp;of&amp;nbsp;the&amp;nbsp;number&amp;nbsp;of&amp;nbsp;iterations,&amp;nbsp;CollectionIteratorActions&amp;nbsp;differ&amp;nbsp;from&amp;nbsp;LoopAction&amp;nbsp;only&amp;nbsp;in&amp;nbsp;their&amp;nbsp;allowed&amp;nbsp;stochastic&amp;nbsp;dependence&amp;nbsp;of&amp;nbsp;random&amp;nbsp;variables&amp;nbsp;inside&amp;nbsp;the&amp;nbsp;loop&amp;nbsp;body's&amp;nbsp;ResourceDemandingBehaviour.&amp;nbsp;If&amp;nbsp;the&amp;nbsp;same&amp;nbsp;random&amp;nbsp;variable&amp;nbsp;occurs&amp;nbsp;twice&amp;nbsp;in&amp;nbsp;such&amp;nbsp;a&amp;nbsp;loop&amp;nbsp;body,&amp;nbsp;analysis&amp;nbsp;tools&amp;nbsp;must&amp;nbsp;evaluate&amp;nbsp;the&amp;nbsp;second&amp;nbsp;occurrence&amp;nbsp;in&amp;nbsp;stochastic&amp;nbsp;dependence&amp;nbsp;to&amp;nbsp;the&amp;nbsp;first&amp;nbsp;occurrence.&amp;nbsp;This&amp;nbsp;complicates&amp;nbsp;the&amp;nbsp;involved&amp;nbsp;calculation&amp;nbsp;and&amp;nbsp;might&amp;nbsp;lead&amp;nbsp;to&amp;nbsp;the&amp;nbsp;intractability&amp;nbsp;of&amp;nbsp;the&amp;nbsp;model,&amp;nbsp;therefore&amp;nbsp;component&amp;nbsp;developers&amp;nbsp;should&amp;nbsp;use&amp;nbsp;CollectionIteratorActions&amp;nbsp;with&amp;nbsp;care&amp;nbsp;and&amp;nbsp;only&amp;nbsp;include&amp;nbsp;them&amp;nbsp;if&amp;nbsp;they&amp;nbsp;expect&amp;nbsp;that&amp;nbsp;the&amp;nbsp;prediction&amp;nbsp;results&amp;nbsp;would&amp;nbsp;be&amp;nbsp;vastly&amp;nbsp;inaccurate&amp;nbsp;without&amp;nbsp;it."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameter_CollectionIteratorAction"
        ordered="false" lowerBound="1" eType="ecore:EClass ../../mpcm.paradigm.repository/model/repository.ecore#//Parameter"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CallAction" abstract="true" eSuperTypes="../../mpcm.paradigm.base/model/base.ecore#//Entity">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generic class realising call relations between behaviours (e.g. method call)."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="inputVariableUsages__CallAction"
        ordered="false" upperBound="-1" eType="ecore:EClass ../../mpcm.paradigm.variables/model/variables.ecore#//VariableUsage"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CallReturnAction" eSuperTypes="#//CallAction">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generic class realising call relations between behaviours (e.g. method call) for calls with parameters send to the called signature and return values."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="returnVariableUsage__CallReturnAction"
        ordered="false" upperBound="-1" eType="ecore:EClass ../../mpcm.paradigm.variables/model/variables.ecore#//VariableUsage"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExternalCallAction" eSuperTypes="../../mpcm.paradigm.behaviour.seff/model/seff.ecore#//AbstractAction #//CallReturnAction">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="ExternalCallAction&amp;nbsp;models&amp;nbsp;the&amp;nbsp;invocation&amp;nbsp;of&amp;nbsp;a&amp;nbsp;service&amp;nbsp;specified&amp;nbsp;in&amp;nbsp;a&amp;nbsp;required&amp;nbsp;interface.&amp;nbsp;Therefore,&amp;nbsp;it&amp;nbsp;references&amp;nbsp;a&amp;nbsp;Role,&amp;nbsp;from&amp;nbsp;which&amp;nbsp;the&amp;nbsp;providing&amp;nbsp;component&amp;nbsp;can&amp;nbsp;be&amp;nbsp;derived,&amp;nbsp;and&amp;nbsp;a&amp;nbsp;Signature&amp;nbsp;to&amp;nbsp;specify&amp;nbsp;the&amp;nbsp;called&amp;nbsp;service.&amp;nbsp;ExternalCallActions&amp;nbsp;model&amp;nbsp;synchronous&amp;nbsp;calls&amp;nbsp;to&amp;nbsp;required&amp;nbsp;services,&amp;nbsp;i.e.,&amp;nbsp;the&amp;nbsp;caller&amp;nbsp;waits&amp;nbsp;until&amp;nbsp;the&amp;nbsp;called&amp;nbsp;service&amp;nbsp;finishes&amp;nbsp;execution&amp;nbsp;before&amp;nbsp;continuing&amp;nbsp;execution&amp;nbsp;itself.&amp;nbsp;The&amp;nbsp;PCM&amp;nbsp;allows&amp;nbsp;modelling&amp;nbsp;asynchronous&amp;nbsp;calls&amp;nbsp;to&amp;nbsp;required&amp;nbsp;services&amp;nbsp;by&amp;nbsp;using&amp;nbsp;an&amp;nbsp;ExternalCallAction&amp;nbsp;inside&amp;nbsp;a&amp;nbsp;ForkedBehaviour.&lt;br />&#xD;&#xA;ExternalCallActions&amp;nbsp;do&amp;nbsp;not&amp;nbsp;have&amp;nbsp;resource&amp;nbsp;demands&amp;nbsp;by&amp;nbsp;themselves.&amp;nbsp;Component&amp;nbsp;developers&amp;nbsp;need&amp;nbsp;to&amp;nbsp;specify&amp;nbsp;the&amp;nbsp;resource&amp;nbsp;demand&amp;nbsp;of&amp;nbsp;the&amp;nbsp;called&amp;nbsp;service&amp;nbsp;in&amp;nbsp;the&amp;nbsp;RDSEFF&amp;nbsp;of&amp;nbsp;that&amp;nbsp;service.&amp;nbsp;The&amp;nbsp;resource&amp;nbsp;demand&amp;nbsp;can&amp;nbsp;also&amp;nbsp;be&amp;nbsp;calculated&amp;nbsp;by&amp;nbsp;analysing&amp;nbsp;the&amp;nbsp;providing&amp;nbsp;component.&amp;nbsp;This&amp;nbsp;keeps&amp;nbsp;the&amp;nbsp;RDSEFF&amp;nbsp;specification&amp;nbsp;of&amp;nbsp;different&amp;nbsp;component&amp;nbsp;developers&amp;nbsp;independent&amp;nbsp;from&amp;nbsp;each&amp;nbsp;other&amp;nbsp;and&amp;nbsp;makes&amp;nbsp;them&amp;nbsp;replaceable&amp;nbsp;in&amp;nbsp;an&amp;nbsp;architectural&amp;nbsp;model.&lt;br />&#xD;&#xA;ExternalCallActions&amp;nbsp;may&amp;nbsp;contain&amp;nbsp;two&amp;nbsp;sets&amp;nbsp;of&amp;nbsp;VariableUsages&amp;nbsp;specifying&amp;nbsp;input&amp;nbsp;parameter&amp;nbsp;characterisations&amp;nbsp;and&amp;nbsp;output&amp;nbsp;parameter&amp;nbsp;characterisations&amp;nbsp;respectively.&amp;nbsp;VariableUsages&amp;nbsp;for&amp;nbsp;input&amp;nbsp;parameters&amp;nbsp;may&amp;nbsp;only&amp;nbsp;reference&amp;nbsp;IN&amp;nbsp;or&amp;nbsp;INOUT&amp;nbsp;parameters&amp;nbsp;of&amp;nbsp;the&amp;nbsp;call's&amp;nbsp;referenced&amp;nbsp;signature.&amp;nbsp;The&amp;nbsp;random&amp;nbsp;variable&amp;nbsp;characterisation&amp;nbsp;inside&amp;nbsp;such&amp;nbsp;a&amp;nbsp;VariableUsage&amp;nbsp;may&amp;nbsp;be&amp;nbsp;constants,&amp;nbsp;probability&amp;nbsp;distribution&amp;nbsp;functions,&amp;nbsp;or&amp;nbsp;include&amp;nbsp;a&amp;nbsp;stochastic&amp;nbsp;expression&amp;nbsp;involving&amp;nbsp;for&amp;nbsp;example&amp;nbsp;arithmetic&amp;nbsp;operations.&amp;nbsp;The&amp;nbsp;latter&amp;nbsp;models&amp;nbsp;a&amp;nbsp;dependency&amp;nbsp;between&amp;nbsp;the&amp;nbsp;current&amp;nbsp;service's&amp;nbsp;own&amp;nbsp;input&amp;nbsp;parameters&amp;nbsp;and&amp;nbsp;the&amp;nbsp;input&amp;nbsp;parameters&amp;nbsp;of&amp;nbsp;the&amp;nbsp;required&amp;nbsp;service."/>
    </eAnnotations>
    <eOperations name="SignatureBelongsToRole" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="self.role_ExternalService.requiredInterface__OperationRequiredRole.signatures__OperationInterface->includes(self.calledService_ExternalService)"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;pre id=&quot;comment_text_0&quot; class=&quot;bz_comment_text&quot;>&#xD;&#xA;check if the signature&#xD;&#xA;(declared in calledService_ExternalService attribute) belongs to the role&#xD;&#xA;(declared in role_ExternalService attribute)&#xD;&#xA;&lt;/pre>"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The cache of context-specific information."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations name="OperationRequiredRoleMustBeReferencedByContainer" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="self.oclAsType(ecore::EObject)->closure(eContainer())->select( entity | entity.oclIsKindOf(mpcm::core::entity::InterfaceRequiringEntity)).oclAsType(mpcm::core::entity::InterfaceRequiringEntity).requiredRoles_InterfaceRequiringEntity->includes(self.role_ExternalService)"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The cache of context-specific information."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="calledService_ExternalService"
        ordered="false" lowerBound="1" eType="ecore:EClass ../../mpcm.domain.softwarerepository/model/softwarerepository.ecore#//OperationSignature"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="role_ExternalService" ordered="false"
        lowerBound="1" eType="ecore:EClass ../../mpcm.domain.softwarerepository/model/softwarerepository.ecore#//OperationRequiredRole"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="retryCount" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies&amp;nbsp;the&amp;nbsp;number of&amp;nbsp;retries this ExternalCallAction shoul be re-executed&amp;nbsp; in case of failure&#xD;&#xA;occurence."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AcquireAction" eSuperTypes="../../mpcm.paradigm.behaviour.seff/model/seff.ecore#//AbstractInternalControlFlowAction">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&#xD;&#xA;    In&amp;nbsp;an&amp;nbsp;RDSEFF,&amp;nbsp;component&amp;nbsp;developers&amp;nbsp;can&amp;nbsp;specify&amp;nbsp;an&amp;nbsp;AcquireAction,&amp;nbsp;which&amp;nbsp;references&amp;nbsp;a&amp;nbsp;passive&amp;nbsp;resource&amp;nbsp;types.&amp;nbsp;Once&amp;nbsp;analysis&amp;nbsp;tools&amp;nbsp;execute&amp;nbsp;this&amp;nbsp;action,&amp;nbsp;they&amp;nbsp;decrease&amp;nbsp;the&amp;nbsp;amount&amp;nbsp;of&amp;nbsp;items&amp;nbsp;available&amp;nbsp;from&amp;nbsp;the&amp;nbsp;referenced&amp;nbsp;passive&amp;nbsp;resource&amp;nbsp;type&amp;nbsp;by&amp;nbsp;one,&amp;nbsp;if&amp;nbsp;at&amp;nbsp;least&amp;nbsp;one&amp;nbsp;item&amp;nbsp;is&amp;nbsp;available.&amp;nbsp;If&amp;nbsp;none&amp;nbsp;item&amp;nbsp;is&amp;nbsp;available,&amp;nbsp;because&amp;nbsp;other,&amp;nbsp;concurrently&amp;nbsp;executed&amp;nbsp;requests&amp;nbsp;have&amp;nbsp;acquired&amp;nbsp;all&amp;nbsp;of&amp;nbsp;them,&amp;nbsp;analysis&amp;nbsp;tools&amp;nbsp;enqueue&amp;nbsp;the&amp;nbsp;current&amp;nbsp;request&amp;nbsp;(first-come-first-serve&amp;nbsp;scheduling&amp;nbsp;policy)&amp;nbsp;and&amp;nbsp;block&amp;nbsp;it's&amp;nbsp;further&amp;nbsp;execution.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Acquisition&amp;nbsp;and&amp;nbsp;release&amp;nbsp;of&amp;nbsp;passive&amp;nbsp;resources&amp;nbsp;happen&amp;nbsp;instantaneously&amp;nbsp;and&amp;nbsp;do&amp;nbsp;not&amp;nbsp;consume&amp;nbsp;any&amp;nbsp;time&amp;nbsp;except&amp;nbsp;for&amp;nbsp;waiting&amp;nbsp;delays&amp;nbsp;before&amp;nbsp;actual&amp;nbsp;acquisition.&amp;nbsp;Resource&amp;nbsp;locking&amp;nbsp;may&amp;nbsp;introduce&amp;nbsp;deadlocks&amp;nbsp;when&amp;nbsp;simulating&amp;nbsp;the&amp;nbsp;model,&amp;nbsp;however,&amp;nbsp;for&amp;nbsp;performance&amp;nbsp;analysis&amp;nbsp;with&amp;nbsp;the&amp;nbsp;PCM&amp;nbsp;it&amp;nbsp;is&amp;nbsp;assumed&amp;nbsp;that&amp;nbsp;no&amp;nbsp;deadlocks&amp;nbsp;occur.&amp;nbsp;Otherwise,&amp;nbsp;the&amp;nbsp;model&amp;nbsp;first&amp;nbsp;needs&amp;nbsp;to&amp;nbsp;be&amp;nbsp;fixed&amp;nbsp;accordingly&amp;nbsp;before&amp;nbsp;carrying&amp;nbsp;out&amp;nbsp;the&amp;nbsp;performance&amp;nbsp;prediction.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    A reliability-related extension is the timeout mechanism that may be associated to an AcquireAction through the&#xD;&#xA;    &quot;timeout&quot; and &quot;timeoutValue&quot; attributes. See the documentation of the &quot;timeout&quot; attribute for further information.&#xD;&#xA;&lt;/p>"/>
    </eAnnotations>
    <eOperations name="TimeoutValueOfAcquireActionMustNotBeNegative" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="self.timeoutValue.oclAsType(Real) >= 0.0"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The cache of context-specific information."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="passiveresource_AcquireAction"
        ordered="false" lowerBound="1" eType="ecore:EClass ../../mpcm.domain.softwarerepository/model/softwarerepository.ecore#//PassiveResource"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReleaseAction" eSuperTypes="../../mpcm.paradigm.behaviour.seff/model/seff.ecore#//AbstractInternalControlFlowAction">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The ReleaseAction increases the number of available item for the given passive resource type, before the current request&#xD;&#xA;can continue. It should be to execute by one of the other concurrent requests.&#xD;&#xA;Acquisition and release of passive resources happen instantaneously and do not consume any time except for waiting delays before actual acquisition. Resource locking may introduce deadlocks when simulating the model, however, for performance analysis with the PCM it is assumed that no deadlocks occur. Otherwise, the model first needs to be fixed accordingly before carrying out the performance prediction."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="passiveResource_ReleaseAction"
        ordered="false" lowerBound="1" eType="ecore:EClass ../../mpcm.domain.softwarerepository/model/softwarerepository.ecore#//PassiveResource"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SetVariableAction" eSuperTypes="../../mpcm.paradigm.behaviour.seff/model/seff.ecore#//AbstractInternalControlFlowAction">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Set Variable Action Assigns a variable characterisation to an OUT parameter, INOUT parameter, or return value of the service. It ensures that performance-relevant output parameter characterisations of a component service are specified to use them to parameterise the calling RDSEFF. A SetVariableAction must only use output parameters on the left hand side of the assignment and must not use input parameter or local variable&#xD;&#xA;names, because input parameters cannot be returned and local names should not be exposed to adhere the black box principle. The action is only intended to allow proper data flow modelling (i.e., output parameter passing) between different component services, but not to reveal additional internals of the service the current RDSEFF models. Thus, the assigned characterisation is not accessible in subsequent actions of the current RDSEFF. Notice, that the stochastic expression used in this assignment must characterise the result of the whole computation of the current service. For non-trivial components, this requires a substantial stochastic approximation based on manual abstraction. However, recall that not the actual result of a component service needs to be specified, but only its performance-relevant attributes. For example, to model the return value of a component service compressing a file, using its file size divided by the compression factor as the stochastic expression is usually sufficient, while the value of the compressed file is not of interest in a performance model.&#xD;&#xA;Multiple SetVariableActions assigning to the same output parameter might occur at different locations of the control flow in an RDSEFF. In the case of sequences, loops, and fork, the last assignment overwrites the former assignments and gets transferred back to the calling RDSEFF. Therefore, analysis tools may ignore the former assignments. In the case of using a SetVariableAction in two different branches of a BranchAction, only the assignment in the chosen branch is valid and gets transferred back to the caller."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="localVariableUsages_SetVariableAction"
        ordered="false" upperBound="-1" eType="ecore:EClass ../../mpcm.paradigm.variables/model/variables.ecore#//VariableUsage"
        containment="true"/>
  </eClassifiers>
</ecore:EPackage>
